# SPDX-FileCopyrightText: © 2024 Alexander Kromm <mmaulwurff@gmail.com>
# SPDX-License-Identifier: CC0-1.0
:properties:
:header-args: :comments no :mkdirp yes :noweb yes
:end:
#+title: String Utils

* Classes
#+name: classes
#+begin_src c
class NAMESPACE_su : NAMESPACE_StringUtils {}
class NAMESPACE_StringUtils
#+end_src

* Functions
** Join
Joins strings to a single string separated by delimiter.

#+name: join
#+begin_src c
static clearscope string join(Array<string> strings, string delimiter)
{
  uint nStrings = strings.size();
  if (nStrings == 0) return "";

  string result = strings[0];

  for (uint i = 1; i < nStrings; ++i)
    result.appendFormat("%s%s", delimiter, strings[i]);

  return result;
}
#+end_src
#+name: join_test
#+begin_src c
Describe("join test");
Array<string> strings;
It("empty", Assert(su.join(strings, ".") == ""));

strings.push("hello");
strings.push("world");
It("join with delimiter",    Assert(su.join(strings, ", ") == "hello, world"));
It("join without delimiter", Assert(su.join(strings, "")   == "helloworld"));
EndDescribe();
#+end_src

* ZScript
#+begin_src c :tangle build/StringUtils/StringUtils.txt
// <<GPL>>

<<classes>>
{
  <<join>>
}
#+end_src

* Test

#+begin_src c :tangle build/StringUtils/zscript.txt
// <<GPL>>

version 4.12

#include "StringUtils.txt"

class su : NAMESPACE_StringUtils {}

class dd_Test : Clematis
{
  override void TestSuites()
  {
    <<join_test>>
  }
}
#+end_src

* Licenses :noexport:
#+name: CC
#+begin_src :exports none
SPDX-FileTextCopyright: © 2024 Alexander Kromm <mmaulwurff@gmail.com>
SPDX-License-Identifier: CC0-1.0
#+end_src

#+name: GPL
#+begin_src :exports none
SPDX-FileTextCopyright: © 2024 Alexander Kromm <mmaulwurff@gmail.com>
SPDX-License-Identifier: GPL-3.0-or-later
#+end_src
